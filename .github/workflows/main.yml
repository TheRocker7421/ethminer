# This is a basic workflow to help you get started with Actions

name: Build for Windows

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Update submodules
        run: git submodule update --init --recursive

      - name: Configure & Build With CMake
        run: mkdir build && cd build && cmake -DETHASHCUDA=0 .. && cmake --build . --config Release
      
      - name: Make new release 
        id: create-new-release
        uses: actions/create-release@v1
        env: 
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with: 
         tag_name: v${{ github.run_number }}
         release_name: Release v${{ github.run_number }}

      - name: Upload new release to GitHub
        uses: actions/upload-release-asset@v1
        env: 
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
         upload_url: ${{ steps.create-new-release.outputs.upload_url }}
         asset_path: ./build/ethminer/Release/ethminer.exe
         asset_name: ethminer.exe
         asset_content_type: application/exe
         
